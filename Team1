Here's a short Java code that fulfills your requirements:

```
import java.util.Scanner;

public class PrimeIndexSum {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int n = scanner.nextInt();

        if (n < 0) {
            System.out.println("Invalid array size");
            return;
        }

        int sum = 0;
        for (int i = 0; i < n; i++) {
            int num = scanner.nextInt();
            if (num < 0) {
                System.out.println("Invalid input");
                return;
            }
            if (isPrime(i)) {
                sum += num;
            }
        }

        System.out.println(sum);
    }

    private static boolean isPrime(int num) {
        if (num < 2) {
            return false;
        }
        for (int i = 2; i <= Math.sqrt(num); i++) {
            if (num % i == 0) {
                return false;
            }
        }
        return true;
    }
}
```

This code:

1. Reads the array size `n`.
2. Checks for invalid array size (negative number).
3. Reads `n` array elements.
4. Checks for invalid input (negative numbers).
5. Calculates the sum of elements at prime indices.
6. Prints the result.

You can test it with your sample inputs:

```
// Sample Input 1:
7
2
4
5
1
9
3
8

// Sample Output 1:
6

// Sample Input 2:
-7

// Sample Output 2:
Invalid array size
```
